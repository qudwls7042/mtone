<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.torun.mtone.mapper.BoardMapper">
    <select id="readStories" parameterType="com.torun.mtone.common.SearchDto" resultType="com.torun.mtone.board.vo.PostResponse">
        SELECT RN, STORY_NO , TITLE, WRITER, INIT_DATE, VIEWS, LIKE_CNT
          FROM
              (
               SELECT TO_CHAR(ROW_NUMBER() OVER(ORDER BY INIT_DATE DESC)) AS RN
                    , B.STORY_NO , B.TITLE, B.WRITER, B.INIT_DATE, B.VIEWS, NVL(LK.LIKE_CNT, 0) AS LIKE_CNT
                 FROM TB_BASIC_BOARD B
                 LEFT OUTER JOIN (
                                 SELECT STORY_NO, COUNT(*) AS LIKE_CNT
                                   FROM TB_LIKES A
                                  GROUP BY STORY_NO
                                ) LK
                   ON (B.STORY_NO = LK.STORY_NO)
              )
         WHERE RN BETWEEN (#{pagination.limitStart} + 1) AND #{pagination.limitEnd}
    </select>

    <select id="getStoriesCount" parameterType="com.torun.mtone.common.SearchDto" resultType="int">
        SELECT COUNT(*)
          FROM TB_BASIC_BOARD
    </select>

    <select id="readStory" parameterType="string" resultType="ToLowerCaseMap">
        SELECT * FROM TB_BASIC_BOARD WHERE STORY_NO = #{storyNo}
    </select>

    <insert id="inputStory" parameterType="StoryVo">
        INSERT INTO TB_BASIC_BOARD
        (
           STORY_NO
         , TITLE
         , CONTENT
         , INIT_DATE
         , UPDATE_DATE
         , WRITER
         , USER_ID
         )
        VALUES
        (
         'BAS' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') || STORY_NO_SEQ.NEXTVAL
         , #{title}, #{content}
         , TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI')
         , NULL
         , #{writer}
         , #{userId}
         )
    </insert>

    <update id="editStory" parameterType="StoryVo">
        UPDATE TB_BASIC_BOARD
           SET CONTENT = #{content}
         WHERE STORY_NO = #{storyNo}
    </update>

    <delete id="deleteStory" parameterType="string">
        DELETE FROM TB_BASIC_BOARD WHERE STORY_NO = #{story_no}
    </delete>

    <insert id="inputComment" parameterType="hashmap">
        INSERT INTO TB_BASIC_BOARD_COMMENT
            (
             story_no
             , comment_no
             , content
             , init_date
             , writer
             )
        VALUES
            (
             #{story_no}
             , 'COM' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') || COMMENT_NO_SEQ.NEXTVAL
             , #{comment_content}
             , TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI')
            , #{comment_writer}
             )
    </insert>

    <delete id="deleteComments" parameterType="string">
        DELETE FROM TB_BASIC_BOARD_COMMENT WHERE STORY_NO = #{story_no}
    </delete>

    <select id="readComments" parameterType="string" resultType="ToLowerCaseMap">
        SELECT *
          FROM TB_BASIC_BOARD_COMMENT
         WHERE STORY_NO = #{story_no}
          ORDER BY INIT_DATE DESC
    </select>

    <update id="plusViews" parameterType="string">
        UPDATE TB_BASIC_BOARD
        SET VIEWS = VIEWS + 1
        WHERE STORY_NO = #{story_no}
    </update>

    <select id="getLikeIsClickedCnt" parameterType="LikeVo" resultType="int">
        SELECT COUNT(*)
          FROM TB_LIKES
         WHERE USER_ID = #{userId}
           AND STORY_NO = #{storyNo}
    </select>

    <delete id="deleteClickedCnt" parameterType="LikeVo">
        DELETE
          FROM TB_LIKES
         WHERE USER_ID = #{userId}
           AND STORY_NO = #{storyNo}
    </delete>

    <insert id="inputClickedCnt" parameterType="LikeVo">
        INSERT INTO TB_LIKES (USER_ID, STORY_NO)
        VALUES (#{userId}, #{storyNo})
    </insert>

</mapper>